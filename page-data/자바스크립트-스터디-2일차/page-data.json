{"componentChunkName":"component---src-components-template-post-template-tsx","path":"/자바스크립트-스터디-2일차/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h3>ES6 변수와 상수</h3>\n<p><strong>Javascript의 변수 선언</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 변수 선언 (declaration)</span>\n<span class=\"token keyword\">var</span> declaration<span class=\"token punctuation\">;</span> <span class=\"token comment\">//var 키워드로 변수 선언</span>\n\n<span class=\"token comment\">// 변수 초기화 (initialization)</span>\ndeclaration <span class=\"token operator\">=</span> <span class=\"token string\">'선언된 변수에 값을 할당한다'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 범위 설정 (scope)</span>\n프로그램 내부에서 접근가능한 영역 설정\n<span class=\"token function\">전역</span><span class=\"token punctuation\">(</span>Global<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">함수</span><span class=\"token punctuation\">(</span>Function<span class=\"token punctuation\">)</span> 영역을 가짐\n함수 내부에서 선언한 변수는 <span class=\"token function\">함수</span><span class=\"token punctuation\">(</span>지역<span class=\"token punctuation\">)</span>내부에서만 접근 가능\n\n\n<span class=\"token comment\">//함수 선언</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//함수 내부에 변수 선언 및 초기화 (함수 범위 설정)</span>\n  <span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> date<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//함수실행</span>\n<span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 함수영역 내에 선언된 변수는 외부에서 접근 불가하므로 오류발생</span>\n<span class=\"token comment\">// Uncaught ReferenceError: date is not defined at &lt;anonymous></span>\n</code></pre></div>\n<br>\n<p><strong>Javascript는 블록(Block)영역을 지원하지 않고 함수영역만 지원한다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//전역</span>\n<span class=\"token keyword\">var</span> variable <span class=\"token operator\">=</span> <span class=\"token string\">'ECMAScript v5'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전역 variable: '</span><span class=\"token punctuation\">,</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'ECMAScript v5'</span>\n\n<span class=\"token comment\">//블록영역</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> variable <span class=\"token operator\">=</span> <span class=\"token string\">'Javascript'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'블록 영역 variable: '</span><span class=\"token punctuation\">,</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Javascript''</span>\n\n  <span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'블록 영역 array: '</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// []</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//함수 영역</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> variable <span class=\"token operator\">=</span> <span class=\"token string\">'Function Scope'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'함수 영역 : '</span><span class=\"token punctuation\">,</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Function Scope'</span>\n\n<span class=\"token comment\">//전역</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전역 variable: '</span><span class=\"token punctuation\">,</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 블록영역을 지원한다면 'ECMAScript v5'출력이 되야하나 'Javascript' 가 출력</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전역 array: '</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// []</span>\n\n<span class=\"token comment\">//결론: 블록영역을 지원하지 않아 전역이 오염됨</span></code></pre></div>\n<br>\n<p><strong>ES6는 선택적으로 블록(Block)영역을 지원한다. (let, const) 키워드를 사용해 변수선언</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//전역</span>\n<span class=\"token keyword\">var</span> variable <span class=\"token operator\">=</span> <span class=\"token string\">'ECMAScript v5'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전역 variable: '</span><span class=\"token punctuation\">,</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'ECMAScript v5'</span>\n\n<span class=\"token comment\">//블록영역</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> variable <span class=\"token operator\">=</span> <span class=\"token string\">'Javascript'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'블록 영역 variable: '</span><span class=\"token punctuation\">,</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Javascript''</span>\n\n  <span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'블록 영역 array: '</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// []</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//함수 영역</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> variable <span class=\"token operator\">=</span> <span class=\"token string\">'Function Scope'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'함수 영역 : '</span><span class=\"token punctuation\">,</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Function Scope'</span>\n\n<span class=\"token comment\">//전역</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전역 variable: '</span><span class=\"token punctuation\">,</span> variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//'ECMAScript'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전역 array: '</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오류발생 array is not defiend</span>\n\n<span class=\"token comment\">//결론: let, const 키워드를 사용하면 블록영역을 선택적으로 지원</span></code></pre></div>\n<h2>함수실행 시점 &#x26; 스코프 체이닝</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fn_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 반복문 (블록 영역)</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  fn_list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 함수 영역</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'반복문 내부 i :'</span> <span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'반복문 외부 i : '</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//배열 데이터 순환 처리(콜백)</span>\nfn_list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n\n\n<span class=\"token comment\">// 호이스트</span>\n<span class=\"token keyword\">var</span> fn_list<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> l<span class=\"token punctuation\">;</span>\n\nfn_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 반복문 (블록 영역)</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  fn_list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 함수 영역</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'반복문 내부 i :'</span> <span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'반복문 외부 i : '</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//배열 데이터 순환 처리(콜백)</span>\nfn_list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<h2>클로저 &#x26; 함수실행 시점</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fn_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 반복문 (블록 영역)</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 함수 호출 없이 즉시 실행</span>\n  <span class=\"token comment\">// 클로저 생성</span>\n  fn_list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 내부함수 반환</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'반복문 외부 i : '</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//배열 데이터 순환 처리(콜백)</span>\nfn_list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<h2>let &#x26; 블록영역 &#x26; 함수실행 시점</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fn_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 반복문 (블록 영역)</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 함수 호출 없이 즉시 실행</span>\n  <span class=\"token comment\">// 클로저 생성</span>\n  fn_list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//배열 데이터 순환 처리(콜백)</span>\nfn_list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>let 키워드는 블록영역을 지원!\n<br/></p>\n<h4>호이스트</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수 영역</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">condition</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 조건문 (블록영역)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'Fire Ball!'</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Fire Ball!'</span>\n<span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 에러가 아닌 undefiend</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// 함수 영역</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">condition</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//호이스트 (영역의 최상단으로 변수 선언부가 끌어올려짐)</span>\n    <span class=\"token keyword\">var</span> message<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 조건문 (블록영역)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      message <span class=\"token operator\">=</span> <span class=\"token string\">'Fire Ball!'</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Fire Ball!'</span>\n<span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 에러가 아닌 undefiend</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// let 키워드 사용</span>\n\n  <span class=\"token comment\">// 함수 영역</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">condition</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 조건문 (블록영역)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'Fire Ball!'</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Fire Ball!'</span>\n<span class=\"token function\">fire</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 에러 발생 Uncaught ReferenceError: message is not defined</span></code></pre></div>\n<br />\n<p><strong>var</strong> vs <strong>let</strong> vs <strong>const</strong></p>\n<p><strong>var</strong>: 동일한 이름으로 중복 선언을 하더라도 문제가 발생하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> tesla <span class=\"token operator\">=</span> <span class=\"token string\">'TESLA'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> tesla <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'modelS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'model3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'modelX'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'modelY'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><strong>let</strong> 동일한 이름으로 중복 선언시 오류가 발생된다.</p>\n<p>데이터 값 변경이 필요할 경우 사용 권장</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> benz <span class=\"token operator\">=</span> <span class=\"token string\">'BENZ'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> benz <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A Class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'S class'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Uncaught SyntaxError: Identifier 'benz' has already been declared</span></code></pre></div>\n<br/>\n<p><strong>const</strong> 초기 설정된 값을 다른 유형으로 변경할 경우 오류 발생 (상수 이기 때문)</p>\n<p>but! 배열/객체유형일 경우 아이템 추가 및 변경 가능</p>\n<p>데이터값 유형이 배열 / 객체일 때 사용 권장</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> bmw <span class=\"token operator\">=</span> <span class=\"token string\">'BMW'</span>\nbmw <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'1Series'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3 Series'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5 Series'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7 Series'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Assignment to constant variable.</span>\n<span class=\"token comment\">// let 과 마찬가지로 중복 선언도 불가능</span>\n\n<span class=\"token keyword\">const</span> audi<span class=\"token punctuation\">;</span>\naudi <span class=\"token operator\">=</span> <span class=\"token string\">'AUDI'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Uncaught SyntaxError: Missing initializer in const declaration</span>\n<span class=\"token comment\">// 변수 선언과 할당이 동시에 이루어져야 한다!</span>\n\n\n\n</code></pre></div>\n<p><strong>전역에 변수를 선언할 경우 var 변수는 window 객체에서 접근가능</strong></p>\n<p><strong>let, const로 선언된 변수는 window 객체에서 접근 불가능</strong></p>\n<hr>","frontmatter":{"title":"Javascript 스터디 2일차","summary":"ES6 변수와 상수","date":"2020.06.02.","categories":["Javascript"]}}}]}},"pageContext":{"slug":"/자바스크립트-스터디-2일차/"}},"staticQueryHashes":[]}