{"componentChunkName":"component---src-components-template-post-template-tsx","path":"/React기초되짚기-1-JSX/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>React 기초 되짚기 - JSX</h2>\n<p>어느덧 새로운 회사에 적응한지 10개월이 되었다.<br>\n흔히들 웹퍼블리셔라고 말하는 마크업 개발자로 입사하게 되어 내가 원하던 데로 올해 1월 FE개발자로 직군 전환을 하였고 프로젝트를 진행하였지만 마음만 급해 소위 말하는 무지성 상태로 그때 그때 업무를 진행했던거 같아 아쉬움이 많이 든다.<br>\n업무를 진행하다보니 결국에는 기초, 기본이 중요해야 쓸만한 개발자가 될 수 있다는게 많이 느껴져,<br>\n지금이라도 기초 기본을 빠르게 되짚어 보려고 한다.</p>\n<h3>DOM 생성</h3>\n<p>시간을 되돌려 리액트를 사용하지 않고 바닐라 자바스크립만을 이용하여 DOM을 생성하던 때를 기억해보자. (기억폭행…?)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1. #root 요소를 컨테이너에 참조</span>\n<span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2. h1 요소를 생성</span>\nel<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3. 2에서 생성한 h1요소에 텍스트컨텐츠 추가</span>\nel<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrootEl<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2~3 에서 생성한 요소를 rootEl에 자식요소로 추가</span></code></pre></div>\n<p>React를 사용하여 DOM을 생성해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- React 패키지 CDN 링크 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span>\n  <span class=\"token attr-name\">crossorigin</span>\n  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@17/umd/react.development.js<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- React DOM 패키지 CDN 링크 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span>\n  <span class=\"token attr-name\">crossorigin</span>\n  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@17/umd/react-dom.development.js<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 1. #root 요소를 컨테이너에 참조</span>\n<span class=\"token keyword\">const</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 2. h1 요소를 생성, 생성한 h1요소에 children 속성으로 컨텐츠 추가</span>\n<span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    className<span class=\"token operator\">:</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Hello, World'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 3. 2 에서 생성한 요소를 rootEl에 자식요소로 추가</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>JSX를 통해 DOM을 생성해보자.</p>\n<p>JSX란 : JavaScript eXtension의 약자로 React에서 HTML 요소를 표현할 때 사용한다.<br>\nJSX를 이용하려면 자바스크립트의 컴파일러인 Babel을 이용해야한다. Babel을 JSX를 <code>React.createElement()</code>로 호출하여 컴파일 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span><span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>편-안하다.</p>\n<p>또한 JSX에서는 Javascript 코드도 작성이 가능해 개발이 좀 더 용이해진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, world'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> titleClassName <span class=\"token operator\">=</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>titleClassName<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>","frontmatter":{"title":"React 기초 되짚기 1 - JSX","summary":"어느덧 새로운 회사에 적응한지 10개월이 된다 흔히들 웹퍼블리셔라고 말하는 마크업 개발자로 입사하게 되어 내가 원하던 데로 올해 1월 FE개발자로 직군 전환을 하였고 프로젝트를 진행하였지만 마음만 급해 소위 말하는 무지성 상태로 그때 그때 업무를 진행했던거 같아 아쉬움이 많이 든다. 업무를 진행하다보니 결국에는 기초, 기본이 중요해야 쓸만한 개발자가 될 수 있다는게 많이 느껴져, 지금이라도 기초 기본을 정리하면서 되짚어 보려고 한다.","date":"2021.08.16.","categories":["React"]}}}]}},"pageContext":{"slug":"/React기초되짚기-1-JSX/"}},"staticQueryHashes":[]}