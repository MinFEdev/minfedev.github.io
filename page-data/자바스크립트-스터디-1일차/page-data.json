{"componentChunkName":"component---src-components-template-post-template-tsx","path":"/자바스크립트-스터디-1일차/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h3>값 복사 vs 값 참조</h3>\n<p>자바스크립트는 데이터 유형에 따라 값이 <strong>복사</strong>되거나 <strong>참조</strong>가 된다</p>\n<p><strong>값이 복사되는 경우 [원시 데이터 유형 (Primitive data type)]</strong></p>\n<ul>\n<li>null</li>\n<li>undefined</li>\n<li>number</li>\n<li>string</li>\n<li>boolean</li>\n</ul>\n<p>검증 방법: 변수의 참조된 값이 변경되었을때 다른 변수의 값이 변하지 않음.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">var</span> study <span class=\"token operator\">=</span> <span class=\"token string\">'Bored'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> game <span class=\"token operator\">=</span> <span class=\"token string\">'Funny'</span><span class=\"token punctuation\">;</span>\n  study <span class=\"token operator\">=</span> game<span class=\"token punctuation\">;</span> game <span class=\"token operator\">=</span> <span class=\"token string\">'Not funny'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'study :'</span><span class=\"token punctuation\">,</span> study<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* Funny */</span>`</code></pre></div>\n<p><strong>값이 참조되는 경우 (객체 유형 (Object type))</strong></p>\n<p><strong>가변데이터</strong>의 경우 그값이 <strong>참조</strong>된다</p>\n<ul>\n<li>object</li>\n<li>array</li>\n<li>function</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> model3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  segment<span class=\"token operator\">:</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span>\n  brand<span class=\"token operator\">:</span> <span class=\"token string\">'Tesla'</span><span class=\"token punctuation\">,</span>\n  fuel<span class=\"token operator\">:</span> <span class=\"token string\">'Electricity'</span><span class=\"token punctuation\">,</span>\n  zeroToHundred<span class=\"token operator\">:</span> <span class=\"token number\">4.6</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> modelS <span class=\"token operator\">=</span> model3<span class=\"token punctuation\">;</span>\nmodelS<span class=\"token punctuation\">.</span>segment <span class=\"token operator\">=</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">;</span>\n\nmodel3 <span class=\"token operator\">===</span> modelS<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'modelS.segemnt :'</span><span class=\"token punctuation\">,</span> modelS<span class=\"token punctuation\">.</span>segment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// E</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'model3.segemnt :'</span><span class=\"token punctuation\">,</span> model3<span class=\"token punctuation\">.</span>segment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// E</span>\n\n<span class=\"token keyword\">var</span> tesla <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'modelS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'model3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'modelX'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'modelY'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> electricVehicle <span class=\"token operator\">=</span> tesla<span class=\"token punctuation\">;</span>\n\ntesla <span class=\"token operator\">===</span> electricVehicle<span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\n\ntesla<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tesla<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [\"modelS\", \"model3\", \"modelX\"]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>electricVehicle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [\"modelS\", \"model3\", \"modelX\"]</span>\n\ntesla <span class=\"token operator\">===</span> electricVehicle<span class=\"token punctuation\">;</span> <span class=\"token comment\">//true`</span></code></pre></div>\n<p>가변 데이터도 복사가 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> model3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  segment<span class=\"token operator\">:</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span>\n  brand<span class=\"token operator\">:</span> <span class=\"token string\">'Tesla'</span><span class=\"token punctuation\">,</span>\n  fuel<span class=\"token operator\">:</span> <span class=\"token string\">'Electricity'</span><span class=\"token punctuation\">,</span>\n  zeroToHundred<span class=\"token operator\">:</span> <span class=\"token number\">4.6</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> modelY <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> prop <span class=\"token keyword\">in</span> model3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  modelY<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> model3<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>modelY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodel3 <span class=\"token operator\">===</span><span class=\"token operator\">=</span> modelY  <span class=\"token comment\">// false</span>\n\n<span class=\"token keyword\">var</span> tesla <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'modelS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'model3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'modelX'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'modelY'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> copyTesla <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l<span class=\"token operator\">=</span> tesla<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  copyTesla<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tesla<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copyTesla<span class=\"token punctuation\">)</span> <span class=\"token comment\">//['modelS', 'model3', 'modelX', 'modelY'];</span>\ntesla <span class=\"token operator\">===</span> copyTesla <span class=\"token comment\">//false</span>\n\n<span class=\"token comment\">//배열 복사 헬퍼 함수</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">copyArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> copy <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    copy<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> copy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</div>\n<div>\n<h3>함수영역 vs 블록영역</h3>\n<p><strong>전역 :</strong> 소스코드 상 모든곳에서 사용할 수 있다. 전역 오염(안좋은 습관)\n이름공간(name space)을 활용하자!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> apple <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\napple<span class=\"token punctuation\">.</span>tablet <span class=\"token operator\">=</span> <span class=\"token string\">'iPad'</span><span class=\"token punctuation\">;</span>\napple<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getTablet</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tablet<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\napple<span class=\"token punctuation\">.</span><span class=\"token function\">getTablet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'iPad'</span></code></pre></div>\n<p><strong>지역</strong>: 대부분의 프로그래밍 언어의 경우 함수 내에서 유효한 지역변수를 제공</p>\n<p>함수영역내에서 var 키워드를 활용하자!\n함수 영역내에 해당 키워드가 없을 경우 상위 영역에서 변수를 찾고 상위 영역에도 없을 경우 전역변수를 생성하거나 변수명이 있을경우 해당변수에 값을 참조시켜버린다. (전역오염)`</p>\n<p>**지역 :**부분의 프로그래밍 언어의 경우 함수 내에서 유효한 지역변수를 제공</p>\n<p>함수영역내에서 var 키워드를 활용하자!</p>\n<p>함수 영역내에 해당 키워드가 없을 경우 상위 영역에서 변수를 찾고 상위 영역에도 없을 경우 전역변수를 생성하거나 변수명이 있을경우 해당변수에 값을 참조시켜버린다. (전역오염)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수 영역 내에 변수 참조시 var 키워드가 있을 경우</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>airpod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error: airpod is not defiend  변수가 정의되지 않은 상태</span>\n<span class=\"token keyword\">var</span> laptop <span class=\"token operator\">=</span> <span class=\"token string\">'Gram'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">scopeFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> laptop <span class=\"token operator\">=</span> <span class=\"token string\">'Mac Book'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> airpod <span class=\"token operator\">=</span> <span class=\"token string\">'airpod pro'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">scopeFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//함수 실행</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>laptop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//'Gram'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>airpod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error: airpod is not defiend  변수가 정의되지 않은 상태`</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수 영역 내에 변수 참조시 var 키워드가 없을 경우</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>airpod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error: airpod is not defiend  변수가 정의되지 않은 상태</span>\n<span class=\"token keyword\">var</span> laptop <span class=\"token operator\">=</span> <span class=\"token string\">'Gram'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">scopeFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  laptop <span class=\"token operator\">=</span> <span class=\"token string\">'Mac Book'</span><span class=\"token punctuation\">;</span>\n  airpod <span class=\"token operator\">=</span> <span class=\"token string\">'airpod pro'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">scopeFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//함수 실행</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>laptop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//'Mac Book'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>airpod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// airpod pro (전역에 변수 생성해버림)`</span></code></pre></div>\n<p>자바스크립트는 블록영역을 지원하지 않는다. 단 ES6 부터 let 키워드는 블록 영역을 지원한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> <span class=\"token string\">'Javascript'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전역 스크립트는 '</span> <span class=\"token operator\">+</span> script <span class=\"token operator\">+</span> <span class=\"token string\">' 입니다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> <span class=\"token string\">'ECMAScript'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'블록 스크립트는 '</span> <span class=\"token operator\">+</span> script <span class=\"token operator\">+</span> <span class=\"token string\">' 입니다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ECMAScript`</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> <span class=\"token string\">'Javascript'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전역 스크립트는 '</span> <span class=\"token operator\">+</span> script <span class=\"token operator\">+</span> <span class=\"token string\">' 입니다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> script <span class=\"token operator\">=</span> <span class=\"token string\">'ECMAScript'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'블록 스크립트는 '</span> <span class=\"token operator\">+</span> script <span class=\"token operator\">+</span> <span class=\"token string\">' 입니다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Javascript`</span></code></pre></div>\n</div>\n<div>\n<h3>호이스팅</h3>\n<p>자바스크립트엔진은 변수의 선언부분과 함수의 선언부분을 컴퓨터 메모리에 우선 상주시킨다.</p>\n<p>변수는 변수 선언 -> 변수 값을 할당하는 초기화 과정 -> 변수 스코프를 설정하는 과정이 순차적으로 이루어짐</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 변수 초기화</span>\nhoist_is <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'컴파일 단계에서 메모리에 저장'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'초기화가 아닌, 선언만 호이스트'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'JavaScript에서 컨텍스트 실행이 작동하는 방식'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 변수 초기화, 함수 실행</span>\ncloned_arr <span class=\"token operator\">=</span> <span class=\"token function\">copyArray</span><span class=\"token punctuation\">(</span>hoist_is<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 콘솔 출력</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>cloned_arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 함수 선언</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">copyArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>clone <span class=\"token operator\">&amp;&amp;</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> clone <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      clone<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> clone<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 변수 선언</span>\n<span class=\"token keyword\">var</span> cloned_arr<span class=\"token punctuation\">,</span> hoist_is<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//변수 선언</span>\n<span class=\"token keyword\">var</span> cloned_arr<span class=\"token punctuation\">,</span> hoist_is<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//함수 선언</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">copyArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> clone<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>clone <span class=\"token operator\">&amp;&amp;</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>clone <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      clone<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> clone<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 변수 초기화</span>\nhoist_is <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'컴파일 단계에서 메모리에 저장'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'초기화가 아닌, 선언만 호이스트'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'JavaScript에서 컨텍스트 실행이 작동하는 방식'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 변수 초기화, 함수 실행</span>\ncloned_arr <span class=\"token operator\">=</span> <span class=\"token function\">copyArray</span><span class=\"token punctuation\">(</span>hoist_is<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 콘솔 출력</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>cloned_arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>함수의 경우 현재 영역 내에 값을 못찾을경우 한단계 위에서 찾으려 한다 (스코프 체이닝)</p>\n<ul>\n<li>성능관점에서 좋지 못하다.</li>\n</ul>\n<p>※ 변수 선언/초기화, 함수 선언/표현식을 상위에 영역 내 최상위에 작성하는 습관을 들이자! 그 이후에 변수 및 함수실행문 작성</p>\n</div>\n<div>\n<h3>즉시실행함수시</h3>\n<p>가급적이면 전역을 오염시키지 위한 방법으로 IIFE 패턴을 활용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fn1</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'function1'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// fn1 = function</span>\n<span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'function1'</span>\n\n<span class=\"token comment\">// 즉시실행함수</span>\n<span class=\"token keyword\">var</span> fn2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'function2'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfn2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'function2'</span>\n<span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// fn2 is not function`</span></code></pre></div>\n</div>\n</div>\n<hr>","frontmatter":{"title":"Javascript 스터디 1일차","summary":"값 복사 vs 값 참조","date":"2020.06.01.","categories":["Javascript"]}}}]}},"pageContext":{"slug":"/자바스크립트-스터디-1일차/"}},"staticQueryHashes":[]}