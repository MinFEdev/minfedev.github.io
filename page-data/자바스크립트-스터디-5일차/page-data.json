{"componentChunkName":"component---src-components-template-post-template-tsx","path":"/자바스크립트-스터디-5일차/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h4>ES6 Teamplate Literal</h4>\n<p>ES6의 템플릿 리터럴을 사용하면 문자열 이스케이프를 사용 안해도 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ES5</span>\n<span class=\"token keyword\">var</span> comment <span class=\"token operator\">=</span> <span class=\"token string\">'ES6 이전은 \\'이스케이프\\' \"따옴표\" 를 사용해야 합니다'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ES6</span>\n<span class=\"token keyword\">let</span> comment <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">ES6 이후로는 이스케이프 '따옴표'를 사용 안해도 됩니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>문자열 접합</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ES5</span>\n<span class=\"token keyword\">var</span> company <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  brand<span class=\"token operator\">:</span> <span class=\"token string\">'테슬라'</span><span class=\"token punctuation\">,</span>\n  fuel<span class=\"token operator\">:</span> <span class=\"token string\">'전기'</span><span class=\"token punctuation\">,</span>\n  product<span class=\"token operator\">:</span> <span class=\"token string\">'자동차'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  company<span class=\"token punctuation\">.</span>brand <span class=\"token operator\">+</span>\n    <span class=\"token string\">'는 '</span> <span class=\"token operator\">+</span>\n    company<span class=\"token punctuation\">.</span>fuel <span class=\"token operator\">+</span>\n    company<span class=\"token punctuation\">.</span>product <span class=\"token operator\">+</span>\n    <span class=\"token string\">' 생산을 하는 회사다'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ES6</span>\n<span class=\"token keyword\">const</span> company <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  brand<span class=\"token operator\">:</span> <span class=\"token string\">'테슬라'</span><span class=\"token punctuation\">,</span>\n  fuel<span class=\"token operator\">:</span> <span class=\"token string\">'전기'</span><span class=\"token punctuation\">,</span>\n  product<span class=\"token operator\">:</span> <span class=\"token string\">'자동차'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>company<span class=\"token punctuation\">.</span>brand<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">는 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>company<span class=\"token punctuation\">.</span>fuel<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>company<span class=\"token punctuation\">.</span>product<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 생산을 하는 회사다</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ES6의 템플릿 리터럴은 띄어씌기, 개행 자바스크립트 표현식을 지원한다.\nES6로 진행되는 작업에는 적극 활용!</p>\n<h3>확장된 문자 객체</h3>\n<h4>.includes()</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES5 문자열 표함 여부 확인방법</span>\nwindow<span class=\"token punctuation\">.</span>navigator<span class=\"token punctuation\">.</span>userAgent<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Chrome'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//일치하는 문자열이 있을경우  true 반환</span>\n\n<span class=\"token comment\">//ES6의 .includes() 사용</span>\nwindow<span class=\"token punctuation\">.</span>navigator<span class=\"token punctuation\">.</span>userAgent<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Chrome'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//일치하는 문자열이 있을을경우  true 반환</span></code></pre></div>\n<h4>.startsWith() 어떤 문자열이 특정문자로 시작하는지 확인하여 Boolean 값으로 반환</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES5</span>\n<span class=\"token keyword\">var</span> car <span class=\"token operator\">=</span> <span class=\"token string\">'제네시스 그랜져 소나타 아반떼'</span><span class=\"token punctuation\">;</span>\ncar<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'제네시스'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\ncar<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'그'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\n\n<span class=\"token comment\">//헬퍼 함수</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">startsWidth</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">word<span class=\"token punctuation\">,</span> find<span class=\"token punctuation\">,</span> start</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  start <span class=\"token operator\">=</span> start <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> word<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> find<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> find<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">startsWidth</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">,</span> <span class=\"token string\">'그랜져'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//trues</span>\n\n<span class=\"token comment\">//ES6는 startsWith 자체적으로 지원</span>\n<span class=\"token keyword\">var</span> car <span class=\"token operator\">=</span> <span class=\"token string\">'제네시스 그랜져 소나타 아반떼'</span><span class=\"token punctuation\">;</span>\ncar<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'그랜져'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span></code></pre></div>\n<h4>.endsWith() 어떤 문자열이 특정문자로 끝나는지 확인하여 Boolean 값으로 반환</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES5</span>\n<span class=\"token keyword\">var</span> car <span class=\"token operator\">=</span> <span class=\"token string\">'제네시스 그랜져 소나타 아반떼'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> car<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\ncar<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'아반떼'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\n\n<span class=\"token comment\">//헬퍼 함수</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">word<span class=\"token punctuation\">,</span> find<span class=\"token punctuation\">,</span> end</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  end <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">||</span> word<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> find<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//전체 글자수에서 찾고자 하는 문자의 글자수를 뺀다.</span>\n  <span class=\"token keyword\">var</span> lastIndex <span class=\"token operator\">=</span> word<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>find<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> lastIndex <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> lastIndex <span class=\"token operator\">===</span> end<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">,</span> <span class=\"token string\">'아반떼'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\n<span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">,</span> <span class=\"token string\">'소나타'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">//ES6는 endsWith 자체적으로 지원</span>\n<span class=\"token keyword\">var</span> car <span class=\"token operator\">=</span> <span class=\"token string\">'제네시스 그랜져 소나타 아반떼'</span><span class=\"token punctuation\">;</span>\ncar<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'아반떼'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\ncar<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'소나타'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span></code></pre></div>\n<h4>.repeat() 특정문자열을 특정개수만큼 반복한 후 새로운 문자열 반환</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES5 문자열 반복</span>\n<span class=\"token keyword\">var</span> repeatWord <span class=\"token operator\">=</span> <span class=\"token string\">'반복할 문자열 '</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">word<span class=\"token punctuation\">,</span> count</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//카운트 초기화</span>\n  count <span class=\"token operator\">=</span> count <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 입력한 count가 있을 경우 count, 없을 경우 0</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">var</span> combine <span class=\"token operator\">=</span> word<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 반복할 문자열 복사</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    combine <span class=\"token operator\">+=</span> word<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> combine<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>repeatWord<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"반복할 문자열 반복할 문자열 반복할 문자열 반복할 문자열 반복할 문자열 \"</span>\n\n<span class=\"token comment\">//ES6 문자열 반복</span>\n<span class=\"token keyword\">const</span> repetaWord <span class=\"token operator\">=</span> <span class=\"token string\">'ES6 오오오 '</span><span class=\"token punctuation\">;</span>\nrepetaWord<span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//\"ES6 오오오 ES6 오오오 ES6 오오오 ES6 오오오 ES6 오오오 \"</span></code></pre></div>\n</details>\n<hr>","frontmatter":{"title":"Javascript 스터디 5일차","summary":"ES6 Teamplate Literal","date":"2020.06.05.","categories":["Javascript"]}}}]}},"pageContext":{"slug":"/자바스크립트-스터디-5일차/"}},"staticQueryHashes":[]}